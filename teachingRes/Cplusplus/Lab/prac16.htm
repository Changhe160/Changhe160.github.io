<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!-- saved from url=(0047)http://202.114.18.8:8080/cshiyan/cpp/exp16.html -->
<html xmlns="http://www.w3.org/1999/xhtml"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />

<title>实验十六</title>
<style type="text/css">
<!--
.STYLE1 {
	font-size: 24px;
	font-weight: bold;
	color: #990033;
}
.STYLE2 {font-size: 16px}
.STYLE3 {font-size: 16px; font-weight: bold; }
-->
</style>
<style type="text/css"></style></head>

<body>
<div align="center" class="STYLE1">实验十六 继承和派生的基本概念</div>
<p class="STYLE3">一、	实验目的</p>
<p class="STYLE2">继承与派生是面向对象的特性，是面向对象程序设计模拟客观世界的手段之一，本实验的内容包括介绍MFC基础类的派生关系，通过实验要求掌握以下内容。</p>
<p class="STYLE2"> 1．	掌握类继承与派生关系以及实现方法，理解类的层次结构。</p>
<p class="STYLE2"> 2．	掌握派生类构造函数初始化基类成员和对象成员的方法。</p>
<p class="STYLE2"> 3．	掌握赋值兼容原则，掌握派生类的复制构造函数和赋值运算符的定义。  </p>
<p class="STYLE3">二、	实验内容</p>
<p class="STYLE2"> <strong>1．</strong>范例：定义一个继承与派生关系的类体系，在派生类中访问基类成员。先定义一个点类，包含x，y坐标数据成员，显示函数和计算面积的函数成员；以点为基类派生一个圆类，</p>
<p class="STYLE2">增加表示半径的数据成员，重载显示和计算面积的函数；定义一个线段类，以两个点类对象作数据成员，定义显示、求面积及长度函数，线段类采用聚合方式，因为有两个端点，</p>
<p class="STYLE2">不能用派生方式。编程测试所定义的类体系。</p>
<p class="STYLE2"> 【程序】 </p>
<p class="STYLE2"><img src="./prac16_files/42.jpg" width="546" height="522" align="middle">&nbsp;</p>
<p class="STYLE2"><img src="./prac16_files/43.jpg" width="629" height="504" align="middle">&nbsp;</p>
<p class="STYLE2">&nbsp;<img src="./prac16_files/44.jpg" width="405" height="466" align="middle"></p>
<p class="STYLE2">cl3=cl1;</p>
<p class="STYLE2"> cout&lt;&lt;"cl3圆面积："&lt;&lt; cl3.Area()&lt;&lt; endl;</p>
	<p class="STYLE2">cl3.Show();</p>
	<p class="STYLE2">cout&lt;&lt;"线面积："&lt;&lt; ln1. Area()&lt;&lt;'\t'&lt;&lt;"线长度："&lt;&lt; ln1. GetLength()&lt;&lt; endl;</p>
<p class="STYLE2">ln1.Show();</p>
	<p class="STYLE2">ln2.Show();</p>
	<p class="STYLE2"> return 0;</p>
	<p class="STYLE2">}
&nbsp;</p>
    <p class="STYLE2">【注意】</p>
	<p class="STYLE2"> 在Point 类中,将Line 类定义为友元，便于在Line 类中访问；Point 类的x和y 定义为Protected 访问权限，便于派生类访问。</p>
	<p class="STYLE2">注意派生类的构造函数中对基类数据成员的初始化方法（即 Circle(double xv,double yv,double vv):Point(xv,yv)），</p>
	<p class="STYLE2">以及构造函数中对对象成员的初始化方法（即 Line(double xv1,double yv1,double xv2,double yv2) :    start(xv1,yv1),end(xv2,yv2){ } ）</p>
	<p class="STYLE2"> 【要求】	  </p>
	<p class="STYLE2">（1）	建立工程，录入上述程序，改变数据实验之。 </p>
  <p class="STYLE2">（2）	修改Point 类的数据成员x ,y 的访问权限为private ，再运行，结果如何？</p>
	<p class="STYLE2"> （3）	如果不将Line 类设为 Point 类的友元，应采取什么措施？为哪个类增加数据或函数成员？</p>
	<p class="STYLE2">&nbsp;</p>
	<p class="STYLE2"> <strong>2．</strong> 编程：多层派生练习，由上题Point 类和Circle 类继续派生出Cylinder 类。要求计算圆柱体的底面积、侧面积、全面积和体积。
	  
	  
	  
  &nbsp;                </p>


</body></html>